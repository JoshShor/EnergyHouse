package cs134.miracosta.edu.energyhouse.model;

import android.os.Parcel;
import android.os.Parcelable;

/**
 * Classs to fetch and handle information about different appliances
 */

public class ApplianceList implements Parcelable {
    private long mId;
    private String mName;
    private double mWattUsed;
    private double mPrice;
    private String mInfo;

    /**
     * Full constructor for the Solar Panels, ID generated by the database
     * @param id
     * @param name
     * @param wattUsed
     * @param price
     * @param info
     */
    public ApplianceList(long id, String name, double wattUsed, double price, String info) {
        mId = id;
        mName = name;
        mWattUsed = wattUsed;
        mPrice = price;
        mInfo = info;
    }
    /**
     * Instantiates a new Solar Panel information without unique ID.
     * @param name
     * @param wattUsed
     * @param price
     * @param info
     */
    public ApplianceList(String name, double wattUsed, double price, String info) {
        this(-1, name, wattUsed, price, info);
    }

    /**
     * Makes the information the Solar Panel class parcelable
     * @param applParcel
     */
    protected ApplianceList(Parcel applParcel) {
        mId = applParcel.readLong();
        mName = applParcel.readString();
        mWattUsed = applParcel.readDouble();
        mPrice = applParcel.readDouble();
        mInfo = applParcel.readString();
    }
    /**
     * Sets the unique id of the Appliances in database.
     * @param id
     */
    public void setId(long id) {
        mId = id;
    }
    /**
     * Sets the unique id of the Appliances in database.
     * @param name
     */
    public void setName(String name) {
        mName = name;
    }
    /**
     * Instantiates the wattage of the Appliances in database.
     * @param wattUsed
     */
    public void setWattUsed(double wattUsed) {
        mWattUsed = wattUsed;
    }
    /**
     * Instantiates the price of the Appliances in database.
     * @param price
     */
    public void setPrice(double price) {
        mPrice = price;
    }
    /**
     * Instantiates the info of the Appliances in database.
     * @param info
     */
    public void setInfo(String info) {
        mInfo = info;
    }

    //GETTERS TO GET THINGS

    /**
     * Gets the ID of Appliance
     * @return id of Appliance
     */
    public long getId() {
        return mId;
    }

    /**
     * Gets the name of Appliance
     * @return name of Appliance
     */
    public String getName() {
        return mName;
    }

    /**
     * Gets the watts of Appliance
     * @return WattUsed of Appliance
     */
    public double getWattUsed() {
        return mWattUsed;
    }

    /**
     * Gets the price of Appliance
     * @return price of Appliance
     */
    public double getPrice() {
        return mPrice;
    }

    /**
     * Gets the Info of Appliance
     * @return Info of Appliance
     */
    public String getInfo() {
        return mInfo;
    }
    /**
     * toString method for the ApplianceList Class
     * @return a String of all the values
     */
    @Override
    public String toString() {
        return "ApplianceList{" +
                "mId=" + mId +
                ", mName='" + mName + '\'' +
                ", mWattUsed=" + mWattUsed +
                ", mPrice=" + mPrice +
                ", mInfo='" + mInfo + '\'' +
                '}';
    }

    /**
     * Writes object to a parcel
     *
     * @param parcel the parcel to write to
     * @param i
     */
    @Override
    public void writeToParcel(Parcel parcel, int i) {
        parcel.writeLong(mId);
        parcel.writeString(mName);
        parcel.writeDouble(mWattUsed);
        parcel.writeDouble(mPrice);
        parcel.writeString(mInfo);
    }

    /**
     * stub
     * @return 0
     */
    @Override
    public int describeContents() {
        return 0;
    }

    /**
     * Anonymous inner class to create an array of ApplianceList
     */
    public static final Creator<ApplianceList> CREATOR = new Creator<ApplianceList>() {
        /**
         * Creates ApplianceList from Parcel
         * @param in the parcel
         * @return a new ApplianceList
         */
        @Override
        public ApplianceList createFromParcel(Parcel in) {
            return new ApplianceList(in);
        }
        /**
         * Creates an array of SolarPanels of length size
         *
         * @param size of the array
         * @return an array of SolarPanels
         */
        @Override
        public ApplianceList[] newArray(int size) {
            return new ApplianceList[size];
        }
    };




}
